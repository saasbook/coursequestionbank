- if can? :add_tags, problem
  - if column == :checkbox
    = check_box_tag "checked_problems[#{problem.id}]", 1, false, id: "checked_problems_#{problem.id}",
      class: "checkbox check_box_#{group_id}", form: "update_multiple_tags_#{group_id}"

- if can? :add_to_collection,problem
  - if column == :stats
    - stats = problem.attempt_stats
    %div.stats{:id => "stats_#{problem.id}"}
      %div.plain_text
        = "Successful First Attempt Percentage:"
        %p.first_success_rate
          = (1.0 * stats["first_correct"]) / stats["first_attempts"] * 100
        = "overallAttempts:"
        %p.overallAttempts
          = stats["overallAttempts"]
        = "Wrong of All Attempts:"
        %p.allAttemptsWrongAmount
          = stats["allAttemptsWrongAmount"]

        = "Total First Attempts:"
        %p.total_first_attempts
          = stats["first_attempts"]
        = "Wrong First Attempts:"
        %p.wrong_first_attempts
          = stats["first_attempts"] - stats["first_correct"]
        = "Correct First Attempts:"
        %p.correct_first_attempts
          = stats["first_correct"]
        = "Entrys Distribution:"
        %p.entrys_array
          = stats["entry_attempts"].to_s
      %div.first_graph{:id => "first_graph_#{problem.id}"}
        = "PlaceHolder"
      %div.total_graph{:id => "total_graph_#{problem.id}"}
        = "PlaceHolder"
      %div.entrys_graph{:id => "entrys_graph_#{problem.id}"}
        = stats["entry_attempts"].to_s

- if column == :problem
  = render :partial => "problems/student_answer", :locals => {:test_problem => problem, :index => -1},:columns => [:checkbox, :problem]

  %div.additional
    %div.prob-right
      - if can? :set_privacy, problem
        = form_tag problem_path(:id => problem.id), :method => :put, :class => 'prob_privacy' do
          - name = ["Public", "Share", "Private"]
          - level = problem.access_level
          - if level == 1
            = hidden_field_tag :privacy, name[0], :id => nil
            = submit_tag (name[0]), :class => 'btn btn-default privacy-button'
          - elsif level == 2
            = hidden_field_tag :privacy, name[1], :id => nil
            = submit_tag (name[1]), :class => 'btn btn-default privacy-button'
          - else
            = hidden_field_tag :privacy, name[2], :id => nil
            = submit_tag (name[2]), :class => 'btn btn-default privacy-button'

      = form_tag problem_path(:id => problem.id), :method => :put, :class => 'prob_obsolete' do
        = hidden_field_tag :obsolete, problem.obsolete ? '0' : '1', :id => nil
        - if can? :set_privacy, problem
          = submit_tag (problem.obsolete ? 'Obsolete' : 'Mark obsolete'), :class => 'btn btn-default obsolete-button'
        - elsif problem.obsolete
          = submit_tag 'Obsolete', :class => 'btn btn-default obsolete-button', :disabled => true


    %div Created #{problem.created_date} by #{problem.instructor.name}

    - if can? :manage, problem
      %div UID: #{problem.uid}
    -#   = render :partial => 'problems/collection_checkboxes', :locals => {:previous => problem}

    - if can? :set_previous, problem
      %div{:style => 'display: none'}
        Previous version:
        = form_tag problem_path(:id => problem.id), :method => :put, :class => 'previous-form' do
          = text_field_tag :previous, nil, :id => nil, :class => 'form-control', :placeholder => 'Enter problem UID',
              :value => (problem.previous_version.uid if problem.previous_version)

    - if can? :add_to_collection, problem
      = render :partial => 'problems/collection_text', :locals => {:problem => problem}

    - if can? :add_to_collection, problem
      %div.hide_checkbox
        = submit_tag "Show All Collections", :id => "hide_checkbox_block", :class => "hide_checkbox btn btn-default", :title => "show"

      %div.edit-collections{:style => 'display: none'}
        - Collection.accessible_by(current_ability, :manage).each do |collection|
          - selected = collection.problems.include? problem
          %li.collection-checkbox-li
            %input{:type=>"checkbox", :id =>"collections_checkbox_#{collection.id}_#{problem.id}",:class=>"collection-checkbox", :checked=>selected, :action=>"/problems/#{problem.id}", :collection => collection.id, :problem => problem.id}
            =collection.name
        %div.show_checkbox
          = submit_tag "Hide Collections", :id => "show_checkbox_block", :class => "show_checkbox btn btn-default", :title => "hide", :style => 'display: none'


    - if can?  :bloom_categorize, problem
      %div.bloom-buttons
        Bloom category:
        - Problem.all_bloom_categories.each do |category|
          = form_tag problem_path(:id => problem.id), :method => :put do
            - selected = problem.bloom_category == category
            - if selected
              = hidden_field_tag :category, 'none', :id => nil
            - else
              = hidden_field_tag :category, category, :id => nil
            = submit_tag category, :class => "bloom-button btn #{selected ? 'btn-info' : 'btn-default'}"
    - else
      %p
        = problem.bloom_category

    - if can? :supersede, problem
      %div
        Edit question:
        // not sure if text area below is necessary will investigate
        // %textarea{:id => "source_#{problem.id}", :value => "current_ruql", :style => "display: none"}= "#{problem.ruql_source}"
        %button{:title => "", :id => "copy_source_button_#{problem.id}", :class => "d_clip_button btn btn-default",
                :value => "copy_source_button_#{problem.id}", :style => ('display: none' if not Rails.env.test?)}
          Clip Source Code
        = link_to "Supersede", supersede_path(:id => problem.id), :id => "supersede_button_#{problem.id}", :class => 'supersede_button btn btn-default', :value => "Supersede"
        = link_to "Update", minorupdate_path(:id => problem.id), :id => "minorupdate_button_#{problem.id}", :value => "Update", :class => 'minorupdate_button btn btn-default'

        - if !problem.previous_version.nil?
          = link_to "See Version History", problem_history_path(:id => problem.id), :id => "history_button_#{problem.id}", :class => 'history_button btn btn-default'

      %div.supersede_form.hidden-additional{:style => 'display: none'}
        = render :partial => 'problems/new_form', :locals => {:previous => problem}

      %div.history_list.hidden-additional{:style => 'display: none'}
        = render :partial => 'problems/history_list', :locals => {:problem => problem}
      %div.minor_form.hidden-additional{:style => 'display: none'}
        = render :partial => 'problems/minor_form', :locals => {:previous => problem}

- if can? :add_tags, problem
  - if column == :tags
    %div{:id => "all_tags_#{problem.id}", :class => 'tag_list'}
      = render :partial => 'problems/tags', locals: { problem: problem }

    = form_tag add_tags_path(id: problem.id), class: 'add_tags_form' do
      = text_field_tag :tag_names, nil, id: "add_tags_#{problem.id}", class: 'form-control', placeholder: 'Add tags'
